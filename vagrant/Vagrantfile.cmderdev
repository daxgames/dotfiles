$script_cmder = <<-SCRIPT
choco install -y --force 7zip 7zip.install
choco install -y --force cmder
SCRIPT

$script_cmderdev = <<-SCRIPT
$env:path = "$env:path;c:\\tools\\cmder\\vendor\\git-for-windows\\cmd"
c:
cd \\Users\\Vagrant
git clone https://github.com/cmderdev/cmder cmderdev
cd cmderdev
git remote add upstream  https://github.com/cmderdev/cmder
git pull upstream master
# copy C:\\Tools\\Cmder\\Cmder.exe .\\

cmd.exe "/K" '"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat" && powershell -command "& ''c:\\Users\\Vagrant\\cmderdev\\scripts\\build.ps1'' -verbose -compile" && exit'
copy c:\\Users\\Vagrant\\cmderdev\\launcher\\x64\\release\\cmder.exe c:\\Users\\Vagrant\\cmderdev
dir
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.define "cmderdev-10" do |cmderdev|
    cmderdev.vm.hostname = 'cmderdev-10'
    cmderdev.vm.box = "cmderdev_win10"

    cmderdev.vm.provider :virtualbox do |v|
      # v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.gui = true
      v.customize ["modifyvm", :id, "--name", "cmderdev"]
      v.customize ["modifyvm", :id, "--graphicscontroller", "vboxsvga"]
      v.customize ["modifyvm", :id, "--memory", 8192]
      v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      v.customize ["setextradata", :id, "GUI/ScaleFactor", "1.75"]
    end
  end

  config.vm.provision "shell", inline: $script_cmder
  config.vm.provision "shell", inline: $script_cmderdev
end
